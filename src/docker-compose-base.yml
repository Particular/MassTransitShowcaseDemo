services:
  service-control-db:
    profiles: ['', infrastructure]
    container_name: servicecontrol-db
    image: particular/servicecontrol-ravendb:latest
    volumes:
      - sc-data:/var/lib/ravendb/data
  service-control:
    profiles: ['', infrastructure]
    depends_on:
      service-control-db:
        condition: service_healthy
    container_name: servicecontrol
    image: particular/servicecontrol:latest
    command: "--setup-and-run"
    ports:
      - 33333:33333
    environment:
      - TRANSPORTTYPE
      - CONNECTIONSTRING=${CONNECTION_STRING}
      - RAVENDB_CONNECTIONSTRING=http://servicecontrol-db:8080
      - ALLOWMESSAGEEDITING=true
      - SHOW_PENDING_RETRY=true
  masstransit-connector:
    profiles: ['', infrastructure]
    depends_on:
      service-control:
        condition: service_healthy
    container_name: masstransit-connector
    image:  particular/servicecontrol-masstransit-connector:latest
    volumes:
      - ./queues.txt:/app/queues.txt:ro
    environment:
      - TRANSPORT_TYPE
      - CONNECTION_STRING
  service-pulse:
    profiles: ['', infrastructure]
    depends_on:
      service-control:
        condition: service_healthy
    container_name: servicepulse
    image: particular/servicepulse:latest
    ports:
        - 9090:9090
    environment:
        SERVICECONTROL_URL: http://localhost:33333/api/
        MONITORING_URL: "!"
        ENABLE_REVERSE_PROXY: false
        SHOW_PENDING_RETRY: false
  frontend:
    profiles: ['', 'frontend']
    container_name: frontend
    build:
      context: ./frontend  # Path to the folder containing Dockerfile
      dockerfile: Dockerfile
      args:
        BILLING_SIGNALR: localhost:5002
        CLIENT_SIGNALR: localhost:5004
        SALES_SIGNALR: localhost:5001
        SHIPPING_SIGNALR: localhost:5003
    ports:
      - 61335:80
    volumes:
      - ./frontend:/app  # Optional for hot reloading
  billing:
    profiles: ['']
    build:
      context: ./
      dockerfile: ./Billing/Dockerfile
    container_name: billing
    ports:
      - "5002:80"
    environment:
      - LISTENING_PORT=80
      - ORIGIN_URL=http://frontend:8080
      - TRANSPORT_TYPE
      - CONNECTION_STRING
    depends_on:
      service-control:
        condition: service_healthy
  shipping:
    profiles: ['']
    build:
      context: ./
      dockerfile: ./Shipping/Dockerfile
    container_name: shipping
    ports:
      - "5003:80"
    environment:
      - LISTENING_PORT=80
      - ORIGIN_URL=http://frontend:8080
      - TRANSPORT_TYPE
      - CONNECTION_STRING
    depends_on:
      service-control:
        condition: service_healthy
  sales:
    profiles: ['']
    build:
      context: ./
      dockerfile: ./Sales/Dockerfile
    container_name: sales
    ports:
      - "5001:80"
    environment:
      - LISTENING_PORT=80
      - ORIGIN_URL=http://frontend:8080
      - TRANSPORT_TYPE
      - CONNECTION_STRING
    depends_on:
      service-control:
        condition: service_healthy 
  clientui:
    profiles: ['']
    build:
      context: ./
      dockerfile: ./ClientUI/Dockerfile
    container_name: clientui
    ports:
      - "5004:80"
    environment:
      - LISTENING_PORT=80
      - ORIGIN_URL=http://frontend:8080
      - TRANSPORT_TYPE
      - CONNECTION_STRING
    depends_on:
      service-control:
        condition: service_healthy

volumes:
  sc-data: